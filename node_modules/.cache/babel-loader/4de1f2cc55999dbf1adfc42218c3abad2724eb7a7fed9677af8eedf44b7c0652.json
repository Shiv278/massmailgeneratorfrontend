{"ast":null,"code":"var _jsxFileName = \"/Users/zop7768/go/src/MyProjects/massmailgeneratorusinggolang/frontend/src/components/EmailSender.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Container, Typography } from '@mui/material';\nimport { sendEmail } from '../services/emailService';\nimport { parseCSV } from '../utils/csvParser'; // Utility to parse CSV\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailSender = () => {\n  _s();\n  const [subject, setSubject] = useState('');\n  const [body, setBody] = useState('');\n  const [emailInput, setEmailInput] = useState('');\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Check if file is uploaded\n    if (!file && !emailInput.trim()) {\n      setError('Please provide emails or upload a file.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('subject', subject);\n    formData.append('body', body);\n    if (file) {\n      formData.append('file', file); // Attach the file\n    } else {\n      formData.append('emails', emailInput); // Attach manual input as fallback\n    }\n    try {\n      const response = await fetch('http://localhost:8080/send-email', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const data = await response.json();\n        throw new Error(data.error || 'Failed to send email');\n      }\n      setSuccess('Emails sent successfully!');\n      setError('');\n    } catch (err) {\n      setError(err.message);\n      setSuccess('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Mass Email Sender\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Subject\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        value: subject,\n        onChange: e => setSubject(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Body\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        multiline: true,\n        rows: 4,\n        value: body,\n        onChange: e => setBody(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Recipient Email(s)\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        multiline: true,\n        rows: 4,\n        value: emailInput,\n        onChange: e => setEmailInput(e.target.value),\n        placeholder: \"Enter emails separated by commas or newlines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          component: \"label\",\n          children: [\"Upload CSV\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            hidden: true,\n            accept: \".csv\",\n            onChange: e => setFile(e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 27\n      }, this), success && /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"primary\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Send Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(EmailSender, \"JAb71Z1Xg8lXONnzAuymAdwDfyM=\");\n_c = EmailSender;\nexport default EmailSender;\nvar _c;\n$RefreshReg$(_c, \"EmailSender\");","map":{"version":3,"names":["React","useState","TextField","Button","Container","Typography","sendEmail","parseCSV","jsxDEV","_jsxDEV","EmailSender","_s","subject","setSubject","body","setBody","emailInput","setEmailInput","file","setFile","error","setError","success","setSuccess","handleSubmit","e","preventDefault","trim","formData","FormData","append","response","fetch","method","ok","data","json","Error","err","message","maxWidth","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","fullWidth","label","margin","value","onChange","target","required","multiline","rows","placeholder","component","type","hidden","accept","files","color","_c","$RefreshReg$"],"sources":["/Users/zop7768/go/src/MyProjects/massmailgeneratorusinggolang/frontend/src/components/EmailSender.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { TextField, Button, Container, Typography } from '@mui/material';\nimport { sendEmail } from '../services/emailService';\nimport { parseCSV } from '../utils/csvParser'; // Utility to parse CSV\n\nconst EmailSender = () => {\n    const [subject, setSubject] = useState('');\n    const [body, setBody] = useState('');\n    const [emailInput, setEmailInput] = useState('');\n    const [file, setFile] = useState(null);\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        // Check if file is uploaded\n        if (!file && !emailInput.trim()) {\n            setError('Please provide emails or upload a file.');\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append('subject', subject);\n        formData.append('body', body);\n\n        if (file) {\n            formData.append('file', file); // Attach the file\n        } else {\n            formData.append('emails', emailInput); // Attach manual input as fallback\n        }\n\n        try {\n            const response = await fetch('http://localhost:8080/send-email', {\n                method: 'POST',\n                body: formData,\n            });\n\n            if (!response.ok) {\n                const data = await response.json();\n                throw new Error(data.error || 'Failed to send email');\n            }\n\n            setSuccess('Emails sent successfully!');\n            setError('');\n        } catch (err) {\n            setError(err.message);\n            setSuccess('');\n        }\n    };\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Typography variant=\"h4\" gutterBottom>\n                Mass Email Sender\n            </Typography>\n            <form onSubmit={handleSubmit}>\n                <TextField\n                    fullWidth\n                    label=\"Subject\"\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    value={subject}\n                    onChange={(e) => setSubject(e.target.value)}\n                    required\n                />\n                <TextField\n                    fullWidth\n                    label=\"Body\"\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    multiline\n                    rows={4}\n                    value={body}\n                    onChange={(e) => setBody(e.target.value)}\n                    required\n                />\n\n                <TextField\n                    fullWidth\n                    label=\"Recipient Email(s)\"\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    multiline\n                    rows={4}\n                    value={emailInput}\n                    onChange={(e) => setEmailInput(e.target.value)}\n                    placeholder=\"Enter emails separated by commas or newlines\"\n                />\n                <div>\n                    <Button variant=\"contained\" component=\"label\">\n                        Upload CSV\n                        <input\n                            type=\"file\"\n                            hidden\n                            accept=\".csv\"\n                            onChange={(e) => setFile(e.target.files[0])}\n                        />\n                    </Button>\n                </div>\n\n                {error && <Typography color=\"error\">{error}</Typography>}\n                {success && <Typography color=\"primary\">{success}</Typography>}\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\" fullWidth>\n                    Send Email\n                </Button>\n            </form>\n        </Container>\n    );\n};\n\nexport default EmailSender;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}