{"ast":null,"code":"var _jsxFileName = \"/Users/zop7768/go/src/MyProjects/massmailgeneratorusinggolang/frontend/src/components/EmailSender.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Container, Typography } from '@mui/material';\nimport { sendEmail } from '../services/emailService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailSender = () => {\n  _s();\n  const [to, setTo] = useState('');\n  const [subject, setSubject] = useState('');\n  const [body, setBody] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const emailData = {\n      to,\n      subject,\n      body\n    };\n    try {\n      const result = await sendEmail(emailData);\n      setSuccess('Email sent successfully!');\n      setError('');\n    } catch (err) {\n      setError(err.error || 'Failed to send email');\n      setSuccess('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Mass Email Sender\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Recipient Email\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        value: to,\n        onChange: e => setTo(e.target.value),\n        required: true,\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Subject\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        value: subject,\n        onChange: e => setSubject(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Body\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        multiline: true,\n        rows: 4,\n        value: body,\n        onChange: e => setBody(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 27\n      }, this), success && /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"primary\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Send Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(EmailSender, \"qOWpNDBZYtHSSL9nfWmnhYVYYMQ=\");\n_c = EmailSender;\nexport default EmailSender;\nvar _c;\n$RefreshReg$(_c, \"EmailSender\");","map":{"version":3,"names":["React","useState","TextField","Button","Container","Typography","sendEmail","jsxDEV","_jsxDEV","EmailSender","_s","to","setTo","subject","setSubject","body","setBody","error","setError","success","setSuccess","handleSubmit","e","preventDefault","emailData","result","err","maxWidth","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","fullWidth","label","margin","value","onChange","target","required","type","multiline","rows","color","_c","$RefreshReg$"],"sources":["/Users/zop7768/go/src/MyProjects/massmailgeneratorusinggolang/frontend/src/components/EmailSender.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { TextField, Button, Container, Typography } from '@mui/material';\nimport { sendEmail } from '../services/emailService';\n\nconst EmailSender = () => {\n    const [to, setTo] = useState('');\n    const [subject, setSubject] = useState('');\n    const [body, setBody] = useState('');\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const emailData = { to, subject, body };\n\n        try {\n            const result = await sendEmail(emailData);\n            setSuccess('Email sent successfully!');\n            setError('');\n        } catch (err) {\n            setError(err.error || 'Failed to send email');\n            setSuccess('');\n        }\n    };\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Typography variant=\"h4\" gutterBottom>\n                Mass Email Sender\n            </Typography>\n            <form onSubmit={handleSubmit}>\n                <TextField\n                    fullWidth\n                    label=\"Recipient Email\"\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    value={to}\n                    onChange={(e) => setTo(e.target.value)}\n                    required\n                    type=\"email\"\n                />\n                <TextField\n                    fullWidth\n                    label=\"Subject\"\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    value={subject}\n                    onChange={(e) => setSubject(e.target.value)}\n                    required\n                />\n                <TextField\n                    fullWidth\n                    label=\"Body\"\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    multiline\n                    rows={4}\n                    value={body}\n                    onChange={(e) => setBody(e.target.value)}\n                    required\n                />\n                {error && <Typography color=\"error\">{error}</Typography>}\n                {success && <Typography color=\"primary\">{success}</Typography>}\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\" fullWidth>\n                    Send Email\n                </Button>\n            </form>\n        </Container>\n    );\n};\n\nexport default EmailSender;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}