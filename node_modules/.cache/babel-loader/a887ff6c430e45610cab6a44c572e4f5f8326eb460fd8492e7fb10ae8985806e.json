{"ast":null,"code":"var _jsxFileName = \"/Users/zop7768/go/src/MyProjects/massmailgeneratorusinggolang/frontend/src/components/EmailSender.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Container, Typography } from '@mui/material';\nimport { sendEmail } from '../services/emailService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailSender = () => {\n  _s();\n  const [emails, setEmails] = useState('');\n  const [subject, setSubject] = useState('');\n  const [body, setBody] = useState('');\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const handleFileUpload = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('subject', subject);\n    formData.append('body', body);\n    if (file) {\n      formData.append('file', file);\n    } else {\n      formData.append('emails', emails);\n    }\n    try {\n      const result = await sendEmail(formData);\n      setSuccess('Emails sent successfully!');\n      setError('');\n    } catch (err) {\n      setError(err.error || 'Failed to send emails');\n      setSuccess('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Mass Email Sender\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Subject\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        value: subject,\n        onChange: e => setSubject(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Body\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        multiline: true,\n        rows: 4,\n        value: body,\n        onChange: e => setBody(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Recipient Emails\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        multiline: true // Allow multiple lines\n        ,\n        rows: 5 // Set visible rows\n        ,\n        placeholder: \"Enter emails separated by commas or newlines\",\n        value: emails,\n        onChange: e => setEmails(e.target.value),\n        disabled: !!file // Disable if file is uploaded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        gutterBottom: true,\n        children: \"OR upload a CSV file with email addresses:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv\",\n        onChange: handleFileUpload,\n        style: {\n          marginBottom: '16px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 27\n      }, this), success && /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"primary\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Send Emails\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(EmailSender, \"DVSklKP6fZnh/R4RDC3WPA9eXFk=\");\n_c = EmailSender;\nexport default EmailSender;\nvar _c;\n$RefreshReg$(_c, \"EmailSender\");","map":{"version":3,"names":["React","useState","TextField","Button","Container","Typography","sendEmail","jsxDEV","_jsxDEV","EmailSender","_s","emails","setEmails","subject","setSubject","body","setBody","file","setFile","error","setError","success","setSuccess","handleFileUpload","event","target","files","handleSubmit","e","preventDefault","formData","FormData","append","result","err","maxWidth","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","fullWidth","label","margin","value","onChange","required","multiline","rows","placeholder","disabled","type","accept","style","marginBottom","color","_c","$RefreshReg$"],"sources":["/Users/zop7768/go/src/MyProjects/massmailgeneratorusinggolang/frontend/src/components/EmailSender.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { TextField, Button, Container, Typography } from '@mui/material';\nimport { sendEmail } from '../services/emailService';\n\nconst EmailSender = () => {\n    const [emails, setEmails] = useState('');\n    const [subject, setSubject] = useState('');\n    const [body, setBody] = useState('');\n    const [file, setFile] = useState(null);\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState('');\n\n    const handleFileUpload = (event) => {\n        setFile(event.target.files[0]);\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.append('subject', subject);\n        formData.append('body', body);\n        if (file) {\n            formData.append('file', file);\n        } else {\n            formData.append('emails', emails);\n        }\n\n        try {\n            const result = await sendEmail(formData);\n            setSuccess('Emails sent successfully!');\n            setError('');\n        } catch (err) {\n            setError(err.error || 'Failed to send emails');\n            setSuccess('');\n        }\n    };\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Typography variant=\"h4\" gutterBottom>\n                Mass Email Sender\n            </Typography>\n            <form onSubmit={handleSubmit}>\n                <TextField\n                    fullWidth\n                    label=\"Subject\"\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    value={subject}\n                    onChange={(e) => setSubject(e.target.value)}\n                    required\n                />\n                <TextField\n                    fullWidth\n                    label=\"Body\"\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    multiline\n                    rows={4}\n                    value={body}\n                    onChange={(e) => setBody(e.target.value)}\n                    required\n                />\n                <TextField\n                    fullWidth\n                    label=\"Recipient Emails\"\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    multiline // Allow multiple lines\n                    rows={5} // Set visible rows\n                    placeholder=\"Enter emails separated by commas or newlines\"\n                    value={emails}\n                    onChange={(e) => setEmails(e.target.value)}\n                    disabled={!!file} // Disable if file is uploaded\n                />\n                <Typography variant=\"body2\" gutterBottom>\n                    OR upload a CSV file with email addresses:\n                </Typography>\n                <input\n                    type=\"file\"\n                    accept=\".csv\"\n                    onChange={handleFileUpload}\n                    style={{ marginBottom: '16px' }}\n                />\n                {error && <Typography color=\"error\">{error}</Typography>}\n                {success && <Typography color=\"primary\">{success}</Typography>}\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\" fullWidth>\n                    Send Emails\n                </Button>\n            </form>\n        </Container>\n    );\n};\n\nexport default EmailSender;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}