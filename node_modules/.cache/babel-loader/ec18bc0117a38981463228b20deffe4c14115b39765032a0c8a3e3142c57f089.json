{"ast":null,"code":"var _jsxFileName = \"/Users/zop7768/go/src/MyProjects/massmailgeneratorusinggolang/frontend/src/components/EmailSender.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MassMailForm = () => {\n  _s();\n  const [subject, setSubject] = useState('');\n  const [body, setBody] = useState('');\n  const [emailInput, setEmailInput] = useState('');\n  const [file, setFile] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('subject', subject);\n    formData.append('body', body);\n    if (file) {\n      formData.append('file', file);\n    } else {\n      const emails = emailInput.split(/[\\s,;]+/).filter(email => email.trim());\n      formData.append('emails', JSON.stringify(emails)); // Convert to JSON string\n    }\n    try {\n      const response = await axios.post('http://localhost:8080/send-email', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setSuccessMessage(response.data.message);\n      setErrorMessage('');\n    } catch (error) {\n      setErrorMessage(error.response.data.error);\n      setSuccessMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Mass Mail Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Subject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: subject,\n          onChange: e => setSubject(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: body,\n          onChange: e => setBody(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email Addresses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: emailInput,\n          onChange: e => setEmailInput(e.target.value),\n          placeholder: \"Enter email addresses separated by commas or newlines\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Or Upload CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => setFile(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 30\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(MassMailForm, \"c7B57KMYGzrxwpq98JlIlo/dRuI=\");\n_c = MassMailForm;\nexport default MassMailForm;\nvar _c;\n$RefreshReg$(_c, \"MassMailForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","MassMailForm","_s","subject","setSubject","body","setBody","emailInput","setEmailInput","file","setFile","errorMessage","setErrorMessage","successMessage","setSuccessMessage","handleSubmit","e","preventDefault","formData","FormData","append","emails","split","filter","email","trim","JSON","stringify","response","post","headers","data","message","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","placeholder","files","style","color","_c","$RefreshReg$"],"sources":["/Users/zop7768/go/src/MyProjects/massmailgeneratorusinggolang/frontend/src/components/EmailSender.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst MassMailForm = () => {\n    const [subject, setSubject] = useState('');\n    const [body, setBody] = useState('');\n    const [emailInput, setEmailInput] = useState('');\n    const [file, setFile] = useState(null);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [successMessage, setSuccessMessage] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.append('subject', subject);\n        formData.append('body', body);\n\n        if (file) {\n            formData.append('file', file);\n        } else {\n            const emails = emailInput.split(/[\\s,;]+/).filter(email => email.trim());\n            formData.append('emails', JSON.stringify(emails)); // Convert to JSON string\n        }\n\n        try {\n            const response = await axios.post('http://localhost:8080/send-email', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            });\n\n            setSuccessMessage(response.data.message);\n            setErrorMessage('');\n        } catch (error) {\n            setErrorMessage(error.response.data.error);\n            setSuccessMessage('');\n        }\n    };\n\n    return (\n        <div>\n            <h1>Mass Mail Generator</h1>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label>Subject</label>\n                    <input\n                        type=\"text\"\n                        value={subject}\n                        onChange={(e) => setSubject(e.target.value)}\n                        required\n                    />\n                </div>\n\n                <div>\n                    <label>Body</label>\n                    <textarea\n                        value={body}\n                        onChange={(e) => setBody(e.target.value)}\n                        required\n                    />\n                </div>\n\n                <div>\n                    <label>Email Addresses</label>\n                    <textarea\n                        value={emailInput}\n                        onChange={(e) => setEmailInput(e.target.value)}\n                        placeholder=\"Enter email addresses separated by commas or newlines\"\n                    />\n                </div>\n\n                <div>\n                    <label>Or Upload CSV</label>\n                    <input\n                        type=\"file\"\n                        onChange={(e) => setFile(e.target.files[0])}\n                    />\n                </div>\n\n                <button type=\"submit\">Send Email</button>\n            </form>\n\n            {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n            {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\n        </div>\n    );\n};\n\nexport default MassMailForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMkB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEjB,OAAO,CAAC;IACnCe,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEf,IAAI,CAAC;IAE7B,IAAII,IAAI,EAAE;MACNS,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEX,IAAI,CAAC;IACjC,CAAC,MAAM;MACH,MAAMY,MAAM,GAAGd,UAAU,CAACe,KAAK,CAAC,SAAS,CAAC,CAACC,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;MACxEP,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEM,IAAI,CAACC,SAAS,CAACN,MAAM,CAAC,CAAC,CAAC,CAAC;IACvD;IAEA,IAAI;MACA,MAAMO,QAAQ,GAAG,MAAM9B,KAAK,CAAC+B,IAAI,CAAC,kCAAkC,EAAEX,QAAQ,EAAE;QAC5EY,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MAEFhB,iBAAiB,CAACc,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC;MACxCpB,eAAe,CAAC,EAAE,CAAC;IACvB,CAAC,CAAC,OAAOqB,KAAK,EAAE;MACZrB,eAAe,CAACqB,KAAK,CAACL,QAAQ,CAACG,IAAI,CAACE,KAAK,CAAC;MAC1CnB,iBAAiB,CAAC,EAAE,CAAC;IACzB;EACJ,CAAC;EAED,oBACId,OAAA;IAAAkC,QAAA,gBACIlC,OAAA;MAAAkC,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BtC,OAAA;MAAMuC,QAAQ,EAAExB,YAAa;MAAAmB,QAAA,gBACzBlC,OAAA;QAAAkC,QAAA,gBACIlC,OAAA;UAAAkC,QAAA,EAAO;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACtBtC,OAAA;UACIwC,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEtC,OAAQ;UACfuC,QAAQ,EAAG1B,CAAC,IAAKZ,UAAU,CAACY,CAAC,CAAC2B,MAAM,CAACF,KAAK,CAAE;UAC5CG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAENtC,OAAA;QAAAkC,QAAA,gBACIlC,OAAA;UAAAkC,QAAA,EAAO;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnBtC,OAAA;UACIyC,KAAK,EAAEpC,IAAK;UACZqC,QAAQ,EAAG1B,CAAC,IAAKV,OAAO,CAACU,CAAC,CAAC2B,MAAM,CAACF,KAAK,CAAE;UACzCG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAENtC,OAAA;QAAAkC,QAAA,gBACIlC,OAAA;UAAAkC,QAAA,EAAO;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC9BtC,OAAA;UACIyC,KAAK,EAAElC,UAAW;UAClBmC,QAAQ,EAAG1B,CAAC,IAAKR,aAAa,CAACQ,CAAC,CAAC2B,MAAM,CAACF,KAAK,CAAE;UAC/CI,WAAW,EAAC;QAAuD;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAENtC,OAAA;QAAAkC,QAAA,gBACIlC,OAAA;UAAAkC,QAAA,EAAO;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC5BtC,OAAA;UACIwC,IAAI,EAAC,MAAM;UACXE,QAAQ,EAAG1B,CAAC,IAAKN,OAAO,CAACM,CAAC,CAAC2B,MAAM,CAACG,KAAK,CAAC,CAAC,CAAC;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAENtC,OAAA;QAAQwC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,EAEN3B,YAAY,iBAAIX,OAAA;MAAG+C,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAd,QAAA,EAAEvB;IAAY;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9DzB,cAAc,iBAAIb,OAAA;MAAG+C,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAQ,CAAE;MAAAd,QAAA,EAAErB;IAAc;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAC;AAEd,CAAC;AAACpC,EAAA,CApFID,YAAY;AAAAgD,EAAA,GAAZhD,YAAY;AAsFlB,eAAeA,YAAY;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}