{"ast":null,"code":"var _jsxFileName = \"/Users/zop7768/go/src/MyProjects/massmailgeneratorusinggolang/frontend/src/components/EmailSender.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Container, Typography, Box } from '@mui/material';\nimport { sendEmail } from '../services/emailService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailSender = () => {\n  _s();\n  const [subject, setSubject] = useState('');\n  const [body, setBody] = useState('');\n  const [emails, setEmails] = useState('');\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [fileName, setFileName] = useState('');\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      setFile(selectedFile);\n      setFileName(selectedFile.name);\n      setEmails(''); // Clear manual email input when file is selected\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('subject', subject);\n    formData.append('body', body);\n    if (file) {\n      formData.append('file', file); // Include the file if uploaded\n    } else if (emails) {\n      formData.append('emails', emails); // Include manual emails\n    } else {\n      setError('Please provide emails manually or upload a CSV file.');\n      setSuccess('');\n      return;\n    }\n    try {\n      const result = await sendEmail(formData);\n      setSuccess('Emails sent successfully!');\n      setError('');\n    } catch (err) {\n      setError(err.error || 'Failed to send email');\n      setSuccess('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Mass Email Sender\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Subject\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        value: subject,\n        onChange: e => setSubject(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Body\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        multiline: true,\n        rows: 4,\n        value: body,\n        onChange: e => setBody(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Add Email Addresses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Manual Emails (comma-separated)\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        value: emails,\n        onChange: e => {\n          setEmails(e.target.value);\n          setFile(null); // Clear file input when manual emails are entered\n          setFileName('');\n        },\n        disabled: !!file // Disable manual input if a file is uploaded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        marginY: 2,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          component: \"label\",\n          children: [\"Upload CSV File\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            hidden: true,\n            accept: \".csv\",\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), fileName && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"primary\",\n          marginTop: 1,\n          children: [\"Uploaded: \", fileName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 27\n      }, this), success && /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"primary\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Send Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(EmailSender, \"UK3bUaiZ8UFSYMDXIEn7POQ8NpY=\");\n_c = EmailSender;\nexport default EmailSender;\nvar _c;\n$RefreshReg$(_c, \"EmailSender\");","map":{"version":3,"names":["React","useState","TextField","Button","Container","Typography","Box","sendEmail","jsxDEV","_jsxDEV","EmailSender","_s","subject","setSubject","body","setBody","emails","setEmails","file","setFile","error","setError","success","setSuccess","fileName","setFileName","handleFileChange","e","selectedFile","target","files","name","handleSubmit","preventDefault","formData","FormData","append","result","err","maxWidth","children","variant","gutterBottom","_jsxFileName","lineNumber","columnNumber","onSubmit","fullWidth","label","margin","value","onChange","required","multiline","rows","disabled","marginY","component","type","hidden","accept","color","marginTop","_c","$RefreshReg$"],"sources":["/Users/zop7768/go/src/MyProjects/massmailgeneratorusinggolang/frontend/src/components/EmailSender.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { TextField, Button, Container, Typography, Box } from '@mui/material';\nimport { sendEmail } from '../services/emailService';\n\nconst EmailSender = () => {\n    const [subject, setSubject] = useState('');\n    const [body, setBody] = useState('');\n    const [emails, setEmails] = useState('');\n    const [file, setFile] = useState(null);\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState('');\n    const [fileName, setFileName] = useState('');\n\n    const handleFileChange = (e) => {\n        const selectedFile = e.target.files[0];\n        if (selectedFile) {\n            setFile(selectedFile);\n            setFileName(selectedFile.name);\n            setEmails(''); // Clear manual email input when file is selected\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n\n        formData.append('subject', subject);\n        formData.append('body', body);\n\n        if (file) {\n            formData.append('file', file); // Include the file if uploaded\n        } else if (emails) {\n            formData.append('emails', emails); // Include manual emails\n        } else {\n            setError('Please provide emails manually or upload a CSV file.');\n            setSuccess('');\n            return;\n        }\n\n        try {\n            const result = await sendEmail(formData);\n            setSuccess('Emails sent successfully!');\n            setError('');\n        } catch (err) {\n            setError(err.error || 'Failed to send email');\n            setSuccess('');\n        }\n    };\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Typography variant=\"h4\" gutterBottom>\n                Mass Email Sender\n            </Typography>\n            <form onSubmit={handleSubmit}>\n                <TextField\n                    fullWidth\n                    label=\"Subject\"\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    value={subject}\n                    onChange={(e) => setSubject(e.target.value)}\n                    required\n                />\n                <TextField\n                    fullWidth\n                    label=\"Body\"\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    multiline\n                    rows={4}\n                    value={body}\n                    onChange={(e) => setBody(e.target.value)}\n                    required\n                />\n                <Typography variant=\"h6\" gutterBottom>\n                    Add Email Addresses\n                </Typography>\n                <TextField\n                    fullWidth\n                    label=\"Manual Emails (comma-separated)\"\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    value={emails}\n                    onChange={(e) => {\n                        setEmails(e.target.value);\n                        setFile(null); // Clear file input when manual emails are entered\n                        setFileName('');\n                    }}\n                    disabled={!!file} // Disable manual input if a file is uploaded\n                />\n                <Box marginY={2}>\n                    <Button variant=\"contained\" component=\"label\">\n                        Upload CSV File\n                        <input type=\"file\" hidden accept=\".csv\" onChange={handleFileChange} />\n                    </Button>\n                    {fileName && (\n                        <Typography variant=\"body2\" color=\"primary\" marginTop={1}>\n                            Uploaded: {fileName}\n                        </Typography>\n                    )}\n                </Box>\n                {error && <Typography color=\"error\">{error}</Typography>}\n                {success && <Typography color=\"primary\">{success}</Typography>}\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\" fullWidth>\n                    Send Email\n                </Button>\n            </form>\n        </Container>\n    );\n};\n\nexport default EmailSender;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}